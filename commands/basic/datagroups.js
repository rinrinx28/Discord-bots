const {
  CommandInteraction,
  MessageEmbed,
  Client,
  MessageActionRow,
  MessageSelectMenu,
} = require("discord.js");
const { SlashCommandBuilder } = require("@discordjs/builders");
const groups = require("../../schema/datagroups");
module.exports = {
  permission: "ADMINISTRATOR",
  developersOnly: true,
  data: new SlashCommandBuilder()
    .setName("alldata")
    .setDescription("Ki·ªÉm tra to√†n b·ªô")
    .addStringOption((option) => {
      return option
        .setName("type")
        .setDescription("Ch·ªçn m·ªôt ki·ªÉu Groups m√† b·∫°n mu·ªën ki·ªÉm tra")
        .setRequired(true)
        .addChoices(
          { name: "Gang", value: "gang" },
          { name: "Nh√≥m", value: "nhom" },
          { name: "T·ªï ch·ª©c", value: "groups" },
        );
    }),
  /**
   * @param {CommandInteraction} interaction
   * @param {Client} client
   */
  async execute(interaction, client) {
    let type = interaction.options.getString("type");
    let data = await groups.find({
      guilid: interaction.guildId,
      type: type,
    });
    let options = [];
    switch (type) {
      case "gang":
        if (data.length > 0) {
          for (const x in data) {
            options.push({
              label: data[x].name,
              description: data[x].name,
              value: data[x].name,
            });
          }
          let rows = new MessageActionRow().addComponents(
            new MessageSelectMenu()
              .setCustomId("gang")
              .setPlaceholder("Ch·ªçn Gang b·∫°n mu·ªën ki·ªÉm tra")
              .addOptions(options),
          );
          let embed = new MessageEmbed()
            .setAuthor({
              name: `${interaction.guild.name} - Select Gang`,
              iconURL: interaction.guild.iconURL({ dynamic: true }),
            })
            .setColor("GREEN")
            .setDescription(
              "Vui l√≤ng ch·ªçn Gang m√† b·∫°n mu·ªën xem ·ªü ph√≠a b√™n d∆∞·ªõi. üëáüëáüëá",
            )
            .setFooter({
              text: "Create by " + client.user.username,
              iconURL: client.user.displayAvatarURL({ dynamic: true }),
            });
          interaction.reply({ embeds: [embed], components: [rows] });
        } else
          interaction.reply({
            content:
              "Hi·ªán t·∫°i kh√¥ng c√≥ Gang n√†o trong h·ªá th·ªëng, xin vui l√≤ng th·ª≠ l·∫°i sau !",
          });
        break;
      case "nhom":
        if (data.length > 0) {
          for (const x in data) {
            options.push({
              label: data[x].name,
              value: data[x].name,
            });
          }
          let rows = new MessageActionRow().addComponents(
            new MessageSelectMenu()
              .setCustomId("nhom")
              .setPlaceholder("Ch·ªçn Nh√≥m b·∫°n mu·ªën ki·ªÉm tra")
              .addOptions(options),
          );
          let embed = new MessageEmbed()
            .setAuthor({
              name: `${interaction.guild.name} - Select Nh√≥m`,
              iconURL: interaction.guild.iconURL({ dynamic: true }),
            })
            .setColor("GREEN")
            .setDescription(
              "Vui l√≤ng ch·ªçn Nh√≥m m√† b·∫°n mu·ªën xem ·ªü ph√≠a b√™n d∆∞·ªõi. üëáüëáüëá",
            )
            .setFooter({
              text: "Create by " + client.user.username,
              iconURL: client.user.displayAvatarURL({ dynamic: true }),
            });
          interaction.reply({ embeds: [embed], components: [rows] });
        } else
          interaction.reply({
            content:
              "Hi·ªán t·∫°i kh√¥ng c√≥ Gang n√†o trong h·ªá th·ªëng, xin vui l√≤ng th·ª≠ l·∫°i sau !",
          });
        break;
      case "groups":
        let rows = new MessageActionRow().addComponents(
          new MessageSelectMenu()
            .setCustomId("groups")
            .setPlaceholder("Ch·ªçn Groups b·∫°n mu·ªën ki·ªÉm tra")
            .addOptions(
              {
                label: "C√¥ng An",
                value: "ca",
              },
              {
                label: "B√°c sƒ©",
                value: "med",
              },
              {
                label: "C·ª©u h·ªô",
                value: "ch",
              },
            ),
        );
        let embed = new MessageEmbed()
          .setAuthor({
            name: `${interaction.guild.name} - Select Groups`,
            iconURL: interaction.guild.iconURL({ dynamic: true }),
          })
          .setColor("GREEN")
          .setDescription(
            "Vui l√≤ng ch·ªçn Groups m√† b·∫°n mu·ªën xem ·ªü ph√≠a b√™n d∆∞·ªõi. üëáüëáüëá",
          )
          .setFooter({
            text: "Create by " + client.user.username,
            iconURL: client.user.displayAvatarURL({ dynamic: true }),
          });
        interaction.reply({ embeds: [embed], components: [rows] });
        break;
      default:
        return interaction.reply({ content: "ƒê√£ s·∫£y ra l·ªói !" });
    }
  },
};
